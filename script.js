// ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ
const products = [
    { id: 1, name: "‡∏Å‡∏≤‡πÅ‡∏ü", price: 35, image: "images/‡πÄ‡∏™‡∏∑‡∏≠‡∏ô‡∏≠‡∏ô‡∏Å‡∏¥‡∏ô.jpg" },
    { id: 2, name: "‡∏ä‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÄ‡∏¢‡πá‡∏ô", price: 40, image: "images/‡πÄ‡∏™‡∏∑‡∏≠‡∏ô‡∏≠‡∏ô‡∏Å‡∏¥‡∏ô.jpg" },
    { id: 3, name: "‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡πÄ‡∏¢‡πá‡∏ô", price: 45, image: "images/‡πÄ‡∏™‡∏∑‡∏≠‡∏ô‡∏≠‡∏ô‡∏Å‡∏¥‡∏ô.jpg" },
    { id: 4, name: "‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á", price: 20, image: "images/‡πÄ‡∏™‡∏∑‡∏≠‡∏ô‡∏≠‡∏ô‡∏Å‡∏¥‡∏ô.jpg" },
    { id: 5, name: "‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤", price: 15, image: "images/‡πÄ‡∏™‡∏∑‡∏≠‡∏ô‡∏≠‡∏ô‡∏Å‡∏¥‡∏ô.jpg" },
];
let cart = [];

// ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function loadProducts() {
    const container = document.getElementById("product-list");
    if (!container) return;
    container.innerHTML = "";
    products.forEach(product => {
        const div = document.createElement("div");
        div.className = "product-item";
        div.innerHTML = `
            <img src="${product.image}" alt="${product.name}" class="product-image">
            <div class="product-details">
                ${product.name} - ${product.price} ‡∏ö‡∏≤‡∏ó<br>
                <input type="number" id="qty-${product.id}" value="1" min="1" style="width:50px;">
                <button onclick="addToCart(${product.id})"><i class="fas fa-cart-plus"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</button>
            </div>
        `;
        container.appendChild(div);
    });
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    const qtyInput = document.getElementById(`qty-${productId}`);
    const qty = parseInt(qtyInput.value);
    if (isNaN(qty) || qty <= 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
        return;
    }
    const existingItem = cart.find(item => item.id === productId);
    if (existingItem) {
        existingItem.qty += qty;
    } else {
        cart.push({ ...product, qty });
    }
    renderCart();
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
function renderCart() {
    const tbody = document.querySelector("#cart-table tbody");
    if (!tbody) return;
    tbody.innerHTML = "";
    let total = 0;
    cart.forEach(item => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${item.name}</td>
            <td>${item.qty}</td>
            <td>${item.price * item.qty}</td>
        `;
        tbody.appendChild(tr);
        total += item.price * item.qty;
    });
    document.getElementById("total").textContent = total;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
function addDigit(digit) {
    const input = document.getElementById("cash-display");
    if (input.value === "0") {
        input.value = digit;
    } else {
        input.value += digit;
    }
}
function clearCash() {
    document.getElementById("cash-display").value = "0";
}
function backspace() {
    const input = document.getElementById("cash-display");
    if (input.value.length > 1) {
        input.value = input.value.slice(0, -1);
    } else {
        input.value = "0";
    }
}

// ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô + ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
function checkout() {
    if (cart.length === 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô!");
        return;
    }

    const totalAmount = cart.reduce((sum, i) => sum + i.price * i.qty, 0);
    const cashReceived = parseFloat(document.getElementById("cash-display").value);

    if (isNaN(cashReceived) || cashReceived < totalAmount) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
        return;
    }

    const change = cashReceived - totalAmount;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
    const saleData = {
        name: cart.map(i => i.name).join(", "),
        quantity: cart.map(i => i.qty).reduce((a,b)=>a+b, 0),
        price: cart.map(i => i.price).join(", "),
        time: new Date().toLocaleString(),
        total: totalAmount,
        payment: cashReceived,
        change: change.toFixed(2)
    };

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡∏á localStorage
    saveSaleToHistory(saleData);

    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    document.getElementById("change-result").innerHTML =
        `<strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</strong> ${change.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πá‡∏≠‡∏õ‡∏≠‡∏±‡∏õ
    showPopup(totalAmount, cashReceived, change);

    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    cart = [];
    clearCash();
    renderCart();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏õ‡πá‡∏≠‡∏õ‡∏≠‡∏±‡∏õ
function showPopup(totalAmount, cashReceived, changeAmount) {
    document.getElementById("popup-total").textContent = `‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${totalAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;
    document.getElementById("popup-received").textContent = `‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: ${cashReceived.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;
    document.getElementById("popup-change").textContent = `‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ${changeAmount.toFixed(2)} ‡∏ö‡∏≤‡∏ó`;
    const popup = document.getElementById("success-popup");
    popup.classList.add("show");

    setTimeout(() => {
        closePopup();
    }, 5000);
}

// ‡∏õ‡∏¥‡∏î‡∏õ‡πá‡∏≠‡∏õ‡∏≠‡∏±‡∏õ
function closePopup() {
    const popup = document.getElementById("success-popup");
    popup.classList.remove("show");

    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    cart = [];
    clearCash();
    renderCart();
    document.getElementById("change-result").innerHTML = "";
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡∏á localStorage + ‡∏£‡∏±‡∏ô‡πÄ‡∏•‡∏Ç‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
function saveSaleToHistory(data) {
    let sales = JSON.parse(localStorage.getItem('sales') || '[]');
    const receiptNo = sales.length > 0 ? sales[0].receiptNo + 1 : 1;
    const saleData = {
        receiptNo: receiptNo,
        ...data,
        date: data.time.split(',')[0]
    };
    sales.unshift(saleData);
    localStorage.setItem('sales', JSON.stringify(sales));
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ index.html
function loadSalesHistoryOnIndex() {
    const container = document.getElementById("history-body");
    if (!container) return;
    container.innerHTML = "";
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");

    if (sales.length === 0) {
        container.innerHTML = "<tr><td colspan='5'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>";
        return;
    }

    sales.slice(0, 5).forEach((sale) => {
        const row = `
            <tr>
                <td>${sale.time}</td>
                <td>${sale.total}</td>
                <td>${sale.payment}</td>
                <td>${sale.change}</td>
                <td><button onclick="viewReceipt()">‡∏î‡∏π</button></td>
            </tr>
        `;
        container.innerHTML += row;
    });
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ history.html
function loadFullSalesHistory(all = true) {
    const container = document.getElementById("sales-history");
    if (!container) return;
    container.innerHTML = "";
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");

    let displaySales = all ? sales : sales.filter(sale => {
        const today = new Date().toLocaleDateString("th-TH");
        const saleDate = sale.time.split(',')[0];
        return saleDate === today;
    });

    if (displaySales.length === 0) {
        container.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
        return;
    }

    displaySales.forEach((sale, index) => {
        const div = `
            <div class="sale-item">
                <h3>‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à #${sale.receiptNo}</h3>
                <p><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong> ${sale.name}</p>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:</strong> ${sale.quantity}</p>
                <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> ${sale.price}</p>
                <p><strong>‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${sale.time}</p>
                <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ${parseFloat(sale.total).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <p><strong>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:</strong> ${parseFloat(sale.payment).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <p><strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</strong> ${parseFloat(sale.change).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <button onclick="deleteSale(${index})" style="background-color: #e74c3c; color: white; border: none; padding: 8px 12px; border-radius: 5px;">üóëÔ∏è ‡∏•‡∏ö</button>
                <hr/>
            </div>
        `;
        container.innerHTML += div;
    });

    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const deleteAllBtn = document.getElementById("delete-all-btn");
    if (deleteAllBtn) {
        deleteAllBtn.onclick = deleteAllSales;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
    renderDailySummary();
}

// ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
function deleteSale(index) {
    let sales = JSON.parse(localStorage.getItem("sales") || "[]");
    if (confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) {
        sales.splice(index, 1);
        localStorage.setItem("sales", JSON.stringify(sales));
        loadFullSalesHistory(true); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }
}

// ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function deleteAllSales() {
    if (confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?")) {
        localStorage.removeItem("sales");
        loadFullSalesHistory(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }
}

// ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
function renderDailySummary() {
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");
    const dailySummary = {};
    sales.forEach(sale => {
        const date = sale.date;
        if (!dailySummary[date]) {
            dailySummary[date] = { count: 0, total: 0 };
        }
        dailySummary[date].count += 1;
        dailySummary[date].total += parseFloat(sale.total);
    });

    const summaryContainer = document.getElementById("daily-summary");
    summaryContainer.innerHTML = "";

    if (Object.keys(dailySummary).length === 0) {
        summaryContainer.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢</p>";
        return;
    }

    for (const date in dailySummary) {
        summaryContainer.innerHTML += `
            <div class="summary-item">
                <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${date} |
                <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</strong> ${dailySummary[date].count} |
                <strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ${dailySummary[date].total.toFixed(2)} ‡∏ö‡∏≤‡∏ó
            </div>
        `;
    }
}

// ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ receipt.html
function loadReceipts() {
    const container = document.getElementById("receipt-list");
    if (!container) return;
    container.innerHTML = "";
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");

    if (sales.length === 0) {
        container.innerHTML = "<p style='text-align:center;'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</p>";
        return;
    }

    sales.forEach((sale, index) => {
        const div = `
            <div class="receipt-box">
                <h3>‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à #${sale.receiptNo}</h3>
                <p>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${sale.name}</p>
                <p>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${sale.quantity}</p>
                <p>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏ä‡∏¥‡πâ‡∏ô: ${sale.price}</p>
                <p>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${parseFloat(sale.total).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <p>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: ${parseFloat(sale.payment).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <p>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ${parseFloat(sale.change).toFixed(2)} ‡∏ö‡∏≤‡∏ó</p>
                <p>‡πÄ‡∏ß‡∏•‡∏≤: ${sale.time}</p>
                <button onclick="printReceipt(${index})">üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ô‡∏µ‡πâ</button>
                <hr/>
            </div>
        `;
        container.innerHTML += div;
    });

    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô receipt.html
    const deleteAllBtn = document.getElementById("delete-all-btn");
    if (deleteAllBtn) {
        deleteAllBtn.onclick = deleteAllSales;
    }
}

// ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
function printReceipt(index) {
    const sales = JSON.parse(localStorage.getItem("sales")) || [];
    const sale = sales[index];

    if (!sale) {
        alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ô‡∏µ‡πâ");
        return;
    }

    const printWindow = window.open('', '_blank');
    printWindow.document.write(`
        <html>
        <head><title>‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</title></head>
        <body onload="window.print(); window.close()">
            <pre style="font-size:14px; font-family:monospace;">
[‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏ä‡∏¥‡∏Å‡∏ä‡∏¥‡∏Å‡πÄ‡∏Å‡πâ‡∏ô‡∏â‡∏µ‡∏Å]
‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${sale.time}
-------------------------------------
‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${sale.name}
‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${sale.quantity}
‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢: ${sale.price}
‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${parseFloat(sale.total).toFixed(2)} ‡∏ö‡∏≤‡∏ó
‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: ${parseFloat(sale.payment).toFixed(2)} ‡∏ö‡∏≤‡∏ó
‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ${parseFloat(sale.change).toFixed(2)} ‡∏ö‡∏≤‡∏ó
‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£!
            </pre>
        </body>
        </html>
    `);
    printWindow.document.close();
}

// ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ó‡πá‡∏ö
function openTab(evt, tabName) {
    const tabs = document.getElementsByClassName("tab-content");
    for (let i = 0; i < tabs.length; i++) {
        tabs[i].style.display = "none";
    }
    const tabBtns = document.getElementsByClassName("tab-btn");
    for (let i = 0; i < tabBtns.length; i++) {
        tabBtns[i].classList.remove("active");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.classList.add("active");
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
window.onload = () => {
    loadProducts();
    loadSalesHistoryOnIndex();
    loadFullSalesHistory(true);
    loadReceipts();
};

// ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
document.addEventListener("click", function(e) {
    if (e.target.tagName === "BUTTON") {
        const sound = document.getElementById("click-sound");
        if (sound) {
            sound.currentTime = 0;
            sound.play();
        }
    }
});

// Dark Mode
document.getElementById("dark-mode-toggle").addEventListener("change", function () {
    document.body.classList.toggle("dark-mode");
});

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
function deleteSale(index) {
    let sales = JSON.parse(localStorage.getItem("sales") || "[]");
    if (confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) {
        sales.splice(index, 1);
        localStorage.setItem("sales", JSON.stringify(sales));
        loadFullSalesHistory(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }
}

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function deleteAllSales() {
    if (confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?")) {
        localStorage.removeItem("sales");
        loadFullSalesHistory(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
    }
}

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏° (‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö)
function loadFullSalesHistory(all = true) {
    const container = document.getElementById("sales-history");
    if (!container) return;
    container.innerHTML = "";

    const sales = JSON.parse(localStorage.getItem("sales") || "[]");

    if (sales.length === 0) {
        container.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
        return;
    }

    sales.forEach((sale, index) => {
        const div = `
            <div class="sale-item">
                <strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${sale.name} <br>
                <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:</strong> ${sale.quantity} <br>
                <strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> ${sale.price} ‡∏ö‡∏≤‡∏ó <br>
                <strong>‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${sale.time} <br>
                <strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ${parseFloat(sale.total).toFixed(2)} ‡∏ö‡∏≤‡∏ó <br>
                <strong>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:</strong> ${parseFloat(sale.payment).toFixed(2)} ‡∏ö‡∏≤‡∏ó <br>
                <strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</strong> ${parseFloat(sale.change).toFixed(2)} ‡∏ö‡∏≤‡∏ó <br>
                <button onclick="deleteSale(${index})" style="background-color: #e74c3c; color: white; border: none; padding: 6px 12px; border-radius: 5px;">üóëÔ∏è ‡∏•‡∏ö</button>
                <hr/>
            </div>
        `;
        container.innerHTML += div;
    });

    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const deleteAllBtn = document.getElementById("delete-all-btn");
    if (deleteAllBtn) {
        deleteAllBtn.onclick = deleteAllSales;
    }

    renderDailySummary(); // ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
}

//‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô saveSaleToHistory() ‚Äî ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
function saveSaleToHistory(data) {
    let sales = JSON.parse(localStorage.getItem('sales') || '[]');
    const receiptNo = sales.length > 0 ? sales[0].receiptNo + 1 : 1;
    const saleData = {
        receiptNo: receiptNo,
        ...data,
        date: data.time.split(',')[0]
    };
    sales.unshift(saleData);
    localStorage.setItem('sales', JSON.stringify(sales));
}
function renderDailySummary() {
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");
    const dailySummary = {};
    let grandTotal = 0;

    sales.forEach(sale => {
        const date = sale.date;
        if (!dailySummary[date]) {
            dailySummary[date] = { count: 0, total: 0 };
        }
        dailySummary[date].count += 1;
        dailySummary[date].total += parseFloat(sale.total);
        grandTotal += parseFloat(sale.total);
    });

    const summaryContainer = document.getElementById("daily-summary");
    summaryContainer.innerHTML = "";

    if (Object.keys(dailySummary).length === 0) {
        summaryContainer.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢</p>";
        return;
    }

    for (const date in dailySummary) {
        summaryContainer.innerHTML += `
            <div class="summary-item">
                <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${date} |
                <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</strong> ${dailySummary[date].count} |
                <strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ${dailySummary[date].total.toFixed(2)} ‡∏ö‡∏≤‡∏ó
            </div>
        `;
    }

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const totalSummaryContainer = document.getElementById("total-summary");
    totalSummaryContainer.innerHTML = `
        <div class="total-summary">
            <strong>‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> ${grandTotal.toFixed(2)} ‡∏ö‡∏≤‡∏ó
        </div>
    `;
}
function loadFullSalesHistory(all = true) {
    const container = document.getElementById("sales-history");
    if (!container) return;
    container.innerHTML = "";
    const sales = JSON.parse(localStorage.getItem("sales") || "[]");

    if (sales.length === 0) {
        container.innerHTML = "<tr><td colspan='9'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>";
        renderDailySummary(); // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏°‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        return;
    }

    sales.forEach((sale, index) => {
        const row = `
            <tr>
                <td>${sale.receiptNo}</td>
                <td>${sale.name}</td>
                <td>${sale.quantity}</td>
                <td>${sale.price}</td>
                <td>${sale.time}</td>
                <td>${parseFloat(sale.total).toFixed(2)}</td>
                <td>${parseFloat(sale.payment).toFixed(2)}</td>
                <td>${parseFloat(sale.change).toFixed(2)}</td>
                <td>
                    <button onclick="deleteSale(${index})"><i class="fas fa-trash"></i> ‡∏•‡∏ö</button>
                </td>
            </tr>
        `;
        container.innerHTML += row;
    });

    renderDailySummary(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
}
window.onload = () => {
    loadProducts();
    loadSalesHistoryOnIndex();
    loadFullSalesHistory(true); // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ + ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
    loadReceipts();
};

// ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
function deleteSale(index) {
    let sales = JSON.parse(localStorage.getItem("sales") || "[]");
    if (confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) {
        sales.splice(index, 1);
        localStorage.setItem("sales", JSON.stringify(sales));
        loadFullSalesHistory(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    }
}

// ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function deleteAllSales() {
    if (confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?")) {
        localStorage.removeItem("sales");
        loadFullSalesHistory();
    }
}